// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
// 
// SPDX-License-Identifier: Apache-2.0

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.gardener.gardener.pkg.apis.security.v1alpha1;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option (gogoproto.marshaler_all) = true;
option (gogoproto.stable_marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.goproto_getters_all) = false;
option go_package = "github.com/gardener/gardener/pkg/apis/security/v1alpha1";

// ContextObject identifies the object the token is requested for.
message ContextObject {
  // Kind of the object the token is requested for. Valid kinds are 'Shoot', 'Seed', etc.
  optional string kind = 1 [(gogoproto.customname) = "Kind", (gogoproto.nullable) = false];

  // API version of the object the token is requested for.
  optional string apiVersion = 2 [(gogoproto.customname) = "APIVersion", (gogoproto.nullable) = false];

  // Name of the object the token is requested for.
  optional string name = 3 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // Namespace of the object the token is requested for.
  // +optional
  optional string namespace = 4 [(gogoproto.customname) = "Namespace"];

  // UID of the object the token is requested for.
  optional string uid = 5 [(gogoproto.casttype) = "k8s.io/apimachinery/pkg/types.UID", (gogoproto.customname) = "UID", (gogoproto.nullable) = false];
}

// CredentialsBinding represents a binding to credentials in the same or another namespace.
message CredentialsBinding {
  // Standard object metadata.
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1 [(gogoproto.customname) = "ObjectMeta", (gogoproto.nullable) = false];

  // Provider defines the provider type of the CredentialsBinding.
  // This field is immutable.
  optional CredentialsBindingProvider provider = 2 [(gogoproto.customname) = "Provider", (gogoproto.nullable) = false];

  // CredentialsRef is a reference to a resource holding the credentials.
  // Accepted resources are core/v1.Secret and security.gardener.cloud/v1alpha1.WorkloadIdentity
  optional k8s.io.api.core.v1.ObjectReference credentialsRef = 3 [(gogoproto.customname) = "CredentialsRef", (gogoproto.nullable) = false];

  // Quotas is a list of references to Quota objects in the same or another namespace.
  // This field is immutable.
  // +optional
  repeated k8s.io.api.core.v1.ObjectReference quotas = 4 [(gogoproto.customname) = "Quotas", (gogoproto.nullable) = false];
}

// CredentialsBindingList is a collection of CredentialsBindings.
message CredentialsBindingList {
  // Standard list object metadata.
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1 [(gogoproto.customname) = "ListMeta", (gogoproto.nullable) = false];

  // Items is the list of CredentialsBindings.
  repeated CredentialsBinding items = 2 [(gogoproto.customname) = "Items", (gogoproto.nullable) = false];
}

// CredentialsBindingProvider defines the provider type of the CredentialsBinding.
message CredentialsBindingProvider {
  // Type is the type of the provider.
  optional string type = 1 [(gogoproto.customname) = "Type", (gogoproto.nullable) = false];
}

// TargetSystem represents specific configurations for the system that will accept the JWTs.
message TargetSystem {
  // Type is the type of the target system.
  optional string type = 1 [(gogoproto.customname) = "Type", (gogoproto.nullable) = false];

  // ProviderConfig is the configuration passed to extension resource.
  // +optional
  optional k8s.io.apimachinery.pkg.runtime.RawExtension providerConfig = 2 [(gogoproto.customname) = "ProviderConfig"];
}

// TokenRequest is a resource that is used to request WorkloadIdentity tokens.
message TokenRequest {
  // Standard object metadata.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1 [(gogoproto.customname) = "ObjectMeta", (gogoproto.nullable) = false];

  // Spec holds configuration settings for the requested token.
  optional TokenRequestSpec spec = 2 [(gogoproto.customname) = "Spec", (gogoproto.nullable) = false];

  // Status bears the issued token with additional information back to the client.
  optional TokenRequestStatus status = 3 [(gogoproto.customname) = "Status", (gogoproto.nullable) = false];
}

// TokenRequestSpec holds configuration settings for the requested token.
message TokenRequestSpec {
  // ContextObject identifies the object the token is requested for.
  // +optional
  optional ContextObject contextObject = 1 [(gogoproto.customname) = "ContextObject"];

  // ExpirationSeconds specifies for how long the requested token should be valid.
  // +optional
  optional int64 expirationSeconds = 2 [(gogoproto.customname) = "ExpirationSeconds"];
}

// TokenRequestStatus bears the issued token with additional information back to the client.
message TokenRequestStatus {
  // Token is the issued token.
  optional string token = 1 [(gogoproto.customname) = "Token", (gogoproto.nullable) = false];

  // ExpirationTimeStamp is the time of expiration of the returned token.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time expirationTimestamp = 2 [(gogoproto.customname) = "ExpirationTimeStamp", (gogoproto.nullable) = false];
}

// WorkloadIdentity is resource that allows workloads to be presented before external systems
// by giving them identities managed by the Gardener API server.
// The identity of such workload is represented by JSON Web Token issued by the Gardener API server.
// Workload identities are designed to be used by components running in the Gardener environment,
// seed or runtime cluster, that make use of identity federation inspired by the OIDC protocol.
message WorkloadIdentity {
  // Standard object metadata.
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1 [(gogoproto.customname) = "ObjectMeta", (gogoproto.nullable) = false];

  // Spec configures the JSON Web Token issued by the Gardener API server.
  optional WorkloadIdentitySpec spec = 2 [(gogoproto.customname) = "Spec", (gogoproto.nullable) = false];

  // Status contain the latest observed status of the WorkloadIdentity.
  optional WorkloadIdentityStatus status = 3 [(gogoproto.customname) = "Status", (gogoproto.nullable) = false];
}

// WorkloadIdentityList is a collection of WorkloadIdentities.
message WorkloadIdentityList {
  // Standard list object metadata.
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1 [(gogoproto.customname) = "ListMeta", (gogoproto.nullable) = false];

  // Items is the list of WorkloadIdentities.
  repeated WorkloadIdentity items = 2 [(gogoproto.customname) = "Items", (gogoproto.nullable) = false];
}

// WorkloadIdentitySpec configures the JSON Web Token issued by the Gardener API server.
message WorkloadIdentitySpec {
  // Audiences specify the list of recipients that the JWT is intended for.
  // The values of this field will be set in the 'aud' claim.
  repeated string audiences = 1 [(gogoproto.customname) = "Audiences"];

  // TargetSystem represents specific configurations for the system that will accept the JWTs.
  optional TargetSystem targetSystem = 2 [(gogoproto.customname) = "TargetSystem", (gogoproto.nullable) = false];
}

// WorkloadIdentityStatus contain the latest observed status of the WorkloadIdentity.
message WorkloadIdentityStatus {
  // Sub contains the computed value of the subject that is going to be set in JWTs 'sub' claim.
  optional string sub = 1 [(gogoproto.customname) = "Sub", (gogoproto.nullable) = false];
}

