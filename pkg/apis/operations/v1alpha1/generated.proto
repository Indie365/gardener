// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
// 
// SPDX-License-Identifier: Apache-2.0

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.gardener.gardener.pkg.apis.operations.v1alpha1;

import "github.com/gardener/gardener/pkg/apis/core/v1beta1/generated.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/api/networking/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option (gogoproto.marshaler_all) = true;
option (gogoproto.stable_marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.goproto_getters_all) = false;
option go_package = "github.com/gardener/gardener/pkg/apis/operations/v1alpha1";

// Bastion holds details about an SSH bastion for a shoot cluster.
message Bastion {
  // Standard object metadata.
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1 [(gogoproto.customname) = "ObjectMeta", (gogoproto.nullable) = false];

  // Specification of the Bastion.
  optional BastionSpec spec = 2 [(gogoproto.customname) = "Spec", (gogoproto.nullable) = false];

  // Most recently observed status of the Bastion.
  // +optional
  optional BastionStatus status = 3 [(gogoproto.customname) = "Status", (gogoproto.nullable) = false];
}

// BastionIngressPolicy represents an ingress policy for SSH bastion hosts.
message BastionIngressPolicy {
  // IPBlock defines an IP block that is allowed to access the bastion.
  optional k8s.io.api.networking.v1.IPBlock ipBlock = 1 [(gogoproto.customname) = "IPBlock", (gogoproto.nullable) = false];
}

// BastionList is a list of Bastion objects.
message BastionList {
  // Standard list object metadata.
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1 [(gogoproto.customname) = "ListMeta", (gogoproto.nullable) = false];

  // Items is the list of Bastion.
  repeated Bastion items = 2 [(gogoproto.customname) = "Items", (gogoproto.nullable) = false];
}

// BastionSpec is the specification of a Bastion.
message BastionSpec {
  // ShootRef defines the target shoot for a Bastion. The name field of the ShootRef is immutable.
  optional k8s.io.api.core.v1.LocalObjectReference shootRef = 1 [(gogoproto.customname) = "ShootRef", (gogoproto.nullable) = false];

  // SeedName is the name of the seed to which this Bastion is currently scheduled. This field is populated
  // at the beginning of a create/reconcile operation.
  // +optional
  optional string seedName = 2 [(gogoproto.customname) = "SeedName"];

  // ProviderType is cloud provider used by the referenced Shoot.
  // +optional
  optional string providerType = 3 [(gogoproto.customname) = "ProviderType"];

  // SSHPublicKey is the user's public key. This field is immutable.
  optional string sshPublicKey = 4 [(gogoproto.customname) = "SSHPublicKey", (gogoproto.nullable) = false];

  // Ingress controls from where the created bastion host should be reachable.
  repeated BastionIngressPolicy ingress = 5 [(gogoproto.customname) = "Ingress", (gogoproto.nullable) = false];
}

// BastionStatus holds the most recently observed status of the Bastion.
message BastionStatus {
  // Ingress holds the public IP and/or hostname of the bastion instance.
  // +optional
  optional k8s.io.api.core.v1.LoadBalancerIngress ingress = 1 [(gogoproto.customname) = "Ingress"];

  // Conditions represents the latest available observations of a Bastion's current state.
  // +patchMergeKey=type
  // +patchStrategy=merge
  // +optional
  repeated github.com.gardener.gardener.pkg.apis.core.v1beta1.Condition conditions = 2 [(gogoproto.customname) = "Conditions", (gogoproto.nullable) = false];

  // LastHeartbeatTimestamp is the time when the bastion was last marked as
  // not to be deleted. When this is set, the ExpirationTimestamp is advanced
  // as well.
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastHeartbeatTimestamp = 3 [(gogoproto.customname) = "LastHeartbeatTimestamp"];

  // ExpirationTimestamp is the time after which a Bastion is supposed to be
  // garbage collected.
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time expirationTimestamp = 4 [(gogoproto.customname) = "ExpirationTimestamp"];

  // ObservedGeneration is the most recent generation observed for this Bastion. It corresponds to the
  // Bastion's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 5 [(gogoproto.customname) = "ObservedGeneration"];
}

