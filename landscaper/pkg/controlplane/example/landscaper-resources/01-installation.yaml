apiVersion: landscaper.gardener.cloud/v1alpha1
kind: Installation
metadata:
  name: gardener-controlplane
  namespace: ls-system
spec:
  componentDescriptor:
    ref:
      repositoryContext:
        type: ociRegistry
        baseUrl: eu.gcr.io/gardener-project/development
      componentName: github.com/gardener/gardener
      version: latest

  blueprint:
    ref:
      resourceName: controlplane-blueprint

  imports:
    targets:
      # the "#" forces the landscaper to use the target with the name "runtime-cluster" in the same namespace
      - name: runtimeCluster
        target: '#runtime-cluster'
      - name: virtualGardenCluster
        # match export of virtual garden component
        target: 'virtual-garden-cluster'
    data:
      #  -----  Data refs: importing from virtual garden component -----
      #      - name: virtualGardenApiserverCaPem
      #        dataRef: "virtual-garden-apiserver-ca-pem"

      - name: etcdUrl
        dataRef: "etcd-url"

      - name: etcdCaBundle
        dataRef: "etcd-ca-pem"

      - name: etcdClientCert
        dataRef: "etcd-client-tls-pem"

      - name: etcdClientKey
        dataRef: "etcd-client-tls-key-pem"

      #  -----  User supplied import configuration -----
      - name: gardenerAdmissionController
        secretRef:
          name: landscaper-controlplane-config
          key: gardenerAdmissionController
      - name: rbac
        secretRef:
          name: landscaper-controlplane-config
          key: rbac
      - name: gardenerControllerManager
        secretRef:
          name: landscaper-controlplane-config
          key: gardenerControllerManager
      - name: internalDomain
        secretRef:
          name: landscaper-controlplane-config
          key: internalDomain
      - name: virtualGarden
        secretRef:
          name: landscaper-controlplane-config
          key: virtualGarden
      - name: gardenerAPIServer
        secretRef:
          name: landscaper-controlplane-config
          key: gardenerAPIServer


# NOTE: all specified import keys have to exist (even though declared optional in the blueprint)
# Hence, the installation imports have to be adjusted based on the supplied import configuration

  #  -----  other optional import values -----
  #      - name: openVPNDiffieHellmanKey
  #        configMapRef:
  #          name: landscaper-controlplane-config
  #          key: openVPNDiffieHellmanKey
  #      - name: gardenerScheduler
  #        configMapRef:
  #          name: landscaper-controlplane-config
  #          key: gardenerScheduler
  #      - name: identity
  #        configMapRef:
  #          name: landscaper-controlplane-config
  #          key: identity
  #      - name: alerting
  #        configMapRef:
  #          name: landscaper-controlplane-config
  #          key: alerting
  #      - name: apiVersion
  #        configMapRef:
  #          name: landscaper-controlplane-config
  #          key: apiVersion
  #      - name: certificateRotation
  #        configMapRef:
  #          name: landscaper-controlplane-config
  #          key: certificateRotation
  #      - name: defaultDomains
  #        configMapRef:
  #          name: landscaper-controlplane-config
  #          key: defaultDomains
  exports:
    data:
    - name: gardenerAPIServerCA
      dataRef: "gardener-apiserver-ca"
    - name: gardenerAPIServerTLSServing
      dataRef: "gardener-apiserver-tls-serving"
    - name: gardenerAdmissionControllerCA
      dataRef: "gardener-admission-controller-ca"
    - name: gardenerAdmissionControllerTLSServing
      dataRef: "gardener-admission-controller-tls-serving"
    - name: gardenerControllerManagerTLSServing
      dataRef: "gardener-controller-manager-tls-serving"
    - name: gardenerIdentity
      dataRef: "gardener-identity"
    - name: openVPNDiffieHellmanKey
      dataRef: "openvpn-diffie-hellman-key"