# this blueprint is generated, please do not modify manually
apiVersion: landscaper.gardener.cloud/v1alpha1
kind: Blueprint
# JSONSchema generated by kube-openapi in version draft-04
# For reference, see: https://json-schema.org/specification-links.html#draft-4
jsonSchema: "http://json-schema.org/draft-04/schema"
imports:
  
  - name: alerting
    required: false
    schema:
      items:
      - ref: blueprint://schema/com.github.gardener.gardener.landscaper.pkg.controlplane.apis.imports.v1alpha1.Alerting.yaml
      type: array
  - name: apiVersion
    required: false
    schema:
      description: 'APIVersion defines the versioned schema of this representation of
        an object. Servers should convert recognized schemas to the latest internal
        value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
      type: string
  - name: certificateRotation
    required: false
    schema:
      ref: blueprint://schema/com.github.gardener.gardener.landscaper.pkg.controlplane.apis.imports.v1alpha1.CertificateRotation.yaml
  - name: defaultDomains
    required: false
    schema:
      items:
      - ref: blueprint://schema/com.github.gardener.gardener.landscaper.pkg.controlplane.apis.imports.v1alpha1.DNS.yaml
      type: array
  - name: gardenerAPIServer
    required: true
    schema:
      ref: blueprint://schema/com.github.gardener.gardener.landscaper.pkg.controlplane.apis.imports.v1alpha1.GardenerAPIServer.yaml
  - name: gardenerAdmissionController
    required: false
    schema:
      ref: blueprint://schema/com.github.gardener.gardener.landscaper.pkg.controlplane.apis.imports.v1alpha1.GardenerAdmissionController.yaml
  - name: gardenerControllerManager
    required: false
    schema:
      ref: blueprint://schema/com.github.gardener.gardener.landscaper.pkg.controlplane.apis.imports.v1alpha1.GardenerControllerManager.yaml
  - name: gardenerScheduler
    required: false
    schema:
      ref: blueprint://schema/com.github.gardener.gardener.landscaper.pkg.controlplane.apis.imports.v1alpha1.GardenerScheduler.yaml
  - name: identity
    required: false
    schema:
      description: Identity is the id that uniquely identifies this Gardener installation
        If not set, uses the existing identity of the installation or generates a default
        identity ("landscape-").
      type: string
  - name: internalDomain
    required: true
    schema:
      ref: blueprint://schema/com.github.gardener.gardener.landscaper.pkg.controlplane.apis.imports.v1alpha1.DNS.yaml
  - name: openVPNDiffieHellmanKey
    required: false
    schema:
      description: OpenVPNDiffieHellmanKey is the Diffie-Hellman key used for OpenVPN.
        The VPN bridge from a Shoots control plane running in the Seed cluster to the
        worker nodes of the Shoots is based on OpenVPN. It requires a Diffie Hellman
        key. If no such key is explicitly provided as secret in the garden namespace
        then the Gardener will use a default one (not recommended, but useful for local
        development). If a secret is specified its key will be used for all Shoots.
        Can be generated by `openssl dhparam -out dh2048.pem 2048`
      type: string
  - name: rbac
    required: false
    schema:
      ref: blueprint://schema/com.github.gardener.gardener.landscaper.pkg.controlplane.apis.imports.v1alpha1.Rbac.yaml
  - name: runtimeCluster
    required: true
    targetType: landscaper.gardener.cloud/kubernetes-cluster
  - name: virtualGarden
    required: false
    schema:
      ref: blueprint://schema/com.github.gardener.gardener.landscaper.pkg.controlplane.apis.imports.v1alpha1.VirtualGarden.yaml
  

# For what can be referenced in the deployExecutions, please see:
# https://github.com/gardener/landscaper/blob/master/docs/usage/Blueprints.md#deployexecutions
deployExecutions:
  - name: default
    type: GoTemplate
    template: |
      deployItems:
      - name: deploy
        type: landscaper.gardener.cloud/container
        target:
          name: {{ .imports.runtimeCluster.metadata.name }}
          namespace: {{ .imports.runtimeCluster.metadata.namespace }}
        config:
          apiVersion: container.deployer.landscaper.gardener.cloud/v1alpha1
          kind: ProviderConfiguration
          blueprint:
      {{ toYaml .blueprint | indent 6 }}

          componentDescriptor:
      {{ toYaml .componentDescriptorDef | indent 6 }}

          # the import configuration of the Landscaper Controlplane
          importValues:
            {{ if .imports.apiVersion }}
            apiVersion: .imports.apiVersion
            {{else}}
            apiVersion: controlplane.gardener.landscaper.gardener.cloud/v1alpha1
            {{end}}
            kind: Imports
      {{ toYaml .imports | indent 6 }}

          {{ $resource := getResource .cd "name" "landscaper-controlplane" }}
          image: {{ $resource.access.imageReference }}

