{{- if .Values.recommender.enabled }}
---
apiVersion: {{ include "deploymentversion" . }}
kind: Deployment
metadata:
  name: vpa-recommender
  namespace: {{ .Release.Namespace }}
  labels:
    app: vpa-recommender
{{- if .Values.deploymentLabels }}
{{ toYaml .Values.deploymentLabels | indent 4 }}
{{- else }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.recommender.replicas }}
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: vpa-recommender
  template:
    metadata:
{{- if or .Values.recommender.podAnnotations .Values.recommender.createServiceAccount }}
      annotations:
{{- if .Values.recommender.createServiceAccount }}
        # TODO(rfranzke): Remove in a future release.
        security.gardener.cloud/trigger: rollout
{{- end }}
{{- if .Values.recommender.podAnnotations }}
{{ toYaml .Values.recommender.podAnnotations | indent 8 }}
{{- end }}
{{- end }}
      labels:
        app: vpa-recommender
        networking.gardener.cloud/from-prometheus: allowed
{{ toYaml .Values.labels | indent 8 }}
{{- if .Values.admissionController.podLabels }}
{{ toYaml .Values.admissionController.podLabels | indent 8 }}
{{- end }}
    spec:
{{- if .Values.recommender.createServiceAccount }}
      serviceAccountName: vpa-recommender
{{- else }}
      automountServiceAccountToken: false
{{- end }}
      containers:
      - name: recommender
        image: {{ index .Values.global.images "vpa-recommender" }}
        command:
        - ./recommender
        args:
        - --v=2
        - --stderrthreshold=info
        - --pod-recommendation-min-cpu-millicores=5
        - --pod-recommendation-min-memory-mb=10
        - --recommendation-margin-fraction={{ .Values.recommender.recommendationMarginFraction }}
        - --recommender-interval={{ .Values.recommender.interval }}
        - --kube-api-qps=100
        - --kube-api-burst=120
{{- if not .Values.recommender.createServiceAccount }}
        env:
        - name: KUBERNETES_SERVICE_HOST
          value: kube-apiserver
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        volumeMounts:
        - name: shoot-access
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
{{- end }}
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: 4Gi
          requests:
            cpu: 30m
            memory: 200Mi
        ports:
        - containerPort: 8080
          name: server
        - containerPort: 8942
          name: metrics
{{- if not .Values.recommender.createServiceAccount }}
      volumes:
      - name: shoot-access
        projected:
          defaultMode: 420
          sources:
          - secret:
              items:
              - key: ca.crt
                path: ca.crt
              name: ca
          - secret:
              items:
              - key: token
                path: token
              name: shoot-access-vpa-recommender
{{- end }}
{{- end }}
