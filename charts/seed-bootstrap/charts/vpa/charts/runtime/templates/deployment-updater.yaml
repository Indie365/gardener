{{- if .Values.updater.enabled }}
apiVersion: {{ include "deploymentversion" . }}
kind: Deployment
metadata:
  name: vpa-updater
  namespace: {{ .Release.Namespace }}
  labels:
    app: vpa-updater
{{- if .Values.deploymentLabels }}
{{ toYaml .Values.deploymentLabels | indent 4 }}
{{- else }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.updater.replicas }}
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: vpa-updater
  template:
    metadata:
{{- if or .Values.updater.podAnnotations .Values.updater.createServiceAccount }}
      annotations:
{{- if .Values.updater.createServiceAccount }}
        # TODO(rfranzke): Remove in a future release.
        security.gardener.cloud/trigger: rollout
{{- end }}
{{- if .Values.updater.podAnnotations }}
{{ toYaml .Values.updater.podAnnotations | indent 8 }}
{{- end }}
{{- end }}
      labels:
        app: vpa-updater
        networking.gardener.cloud/from-prometheus: allowed
{{ toYaml .Values.labels | indent 8 }}
{{- if .Values.updater.podLabels }}
{{ toYaml .Values.updater.podLabels | indent 8 }}
{{- end }}
    spec:
{{- if .Values.updater.createServiceAccount }}
      serviceAccountName: vpa-updater
{{- else }}
      automountServiceAccountToken: false
{{- end }}
      containers:
      - name: updater
        image: {{ index .Values.global.images "vpa-updater" }}
        imagePullPolicy: IfNotPresent
        command:
        - ./updater
        args:
        - --min-replicas=1
        - --eviction-tolerance={{ .Values.updater.evictionTolerance }}
        - --eviction-rate-burst={{ .Values.updater.evictionRateBurst }}
        - --eviction-rate-limit={{ .Values.updater.evictionRateLimit }}
        - --evict-after-oom-threshold={{ .Values.updater.evictAfterOOMThreshold }}
        - --updater-interval={{ .Values.updater.interval }}
        - --stderrthreshold=info
        - --v=2
{{- if not .Values.updater.createServiceAccount }}
        env:
        - name: KUBERNETES_SERVICE_HOST
          value: kube-apiserver
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
{{- else }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
{{- end }}
{{- if not .Values.updater.createServiceAccount }}
        volumeMounts:
        - name: shoot-access
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
{{- end }}
        resources:
          limits:
            memory: 500Mi
          requests:
            cpu: 30m
            memory: 200Mi
        ports:
        - name: server
          containerPort: 8080
        - name: metrics
          containerPort: 8943
{{- if not .Values.updater.createServiceAccount }}
      volumes:
      - name: shoot-access
        projected:
          defaultMode: 420
          sources:
          - secret:
              items:
              - key: ca.crt
                path: ca.crt
              name: ca
          - secret:
              items:
              - key: token
                path: token
              name: shoot-access-vpa-updater
{{- end }}
{{- end }}
