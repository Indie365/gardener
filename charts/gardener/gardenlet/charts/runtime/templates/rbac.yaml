{{- if .Values.global.gardenlet.enabled }}
# ClusterRole defines the required permissions for the gardenlet in the seed
# For now, we provide escalation privileges required by gardener resoruce manager.
---
apiVersion: {{ include "rbacversion" . }}
kind: Role
metadata:
  name: gardener.cloud:system:gardenlet
  namespace: default
  labels:
    gardener.cloud/role: gardenlet
    app: gardener
    role: gardenlet
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
---
apiVersion: {{ include "rbacversion" . }}
kind: Role
metadata:
  name: gardener.cloud:system:gardenlet
  namespace: garden
  labels:
    gardener.cloud/role: gardenlet
    app: gardener
    role: gardenlet
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - apps
  resourceNames:
  - fluent-bit
  resources:
  - daemonsets
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - create
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: gardener.cloud:system:gardenlet
  labels:
    gardener.cloud/role: gardenlet
    app: gardener
    role: gardenlet
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  - namespaces
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  resourceNames:
  - alertmanager-db-alertmanager-0
  - loki-loki-0
  - prometheus-db-prometheus-0
  verbs:
  - delete
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - create
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  resourceNames:
  - vpa-webhook-config-seed
  verbs:
  - get
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  resourceNames:
  - hvpas.autoscaling.k8s.io
  verbs:
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - patch
  - update
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - hvpas
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - hvpas
  resourceNames:
  - etcd-events
  - etcd-main
  - kube-apiserver
  - loki
  verbs:
  - delete
  - patch
  - update
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - dns.gardener.cloud
  resources:
  - dnsentries
  - dnsowners
  - dnsproviders
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - druid.gardener.cloud
  resources:
  - etcds
  verbs:
  - create
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - extensions.gardener.cloud
  resources:
  - backupbuckets
  - backupentries
  - clusters
  - containerruntimes
  - controlplanes
  - extensions
  - infrastructures
  - networks
  - operatingsystemconfigs
  - workers
  verbs:
  - create
  - delete
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - resources.gardener.cloud
  resources:
  - managedresources
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - create
  - delete
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - roles
  verbs:
  - bind
  - escalate
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - create
  - delete
  - get
  - patch
  - update
- nonResourceURLs:
  - /healthz
  - /version
  verbs:
  - get
---
apiVersion: {{ include "rbacversion" . }}
kind: RoleBinding
metadata:
  name: gardener.cloud:system:gardenlet
  namespace: default
  labels:
    gardener.cloud/role: gardenlet
    app: gardener
    role: gardenlet
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gardener.cloud:system:gardenlet
subjects:
- kind: ServiceAccount
  name: "{{ required ".Values.global.gardenlet.serviceAccountName is required" .Values.global.gardenlet.serviceAccountName }}"
  namespace: garden
---
apiVersion: {{ include "rbacversion" . }}
kind: RoleBinding
metadata:
  name: gardener.cloud:system:gardenlet
  namespace: garden
  labels:
    gardener.cloud/role: gardenlet
    app: gardener
    role: gardenlet
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gardener.cloud:system:gardenlet
subjects:
- kind: ServiceAccount
  name: "{{ required ".Values.global.gardenlet.serviceAccountName is required" .Values.global.gardenlet.serviceAccountName }}"
  namespace: garden
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRoleBinding
metadata:
  name: gardener.cloud:system:gardenlet
  labels:
    gardener.cloud/role: gardenlet
    app: gardener
    role: gardenlet
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gardener.cloud:system:gardenlet
subjects:
- kind: ServiceAccount
  name: "{{ required ".Values.global.gardenlet.serviceAccountName is required" .Values.global.gardenlet.serviceAccountName }}"
  namespace: garden

### Istio releated rules. Required even when ManagedIstio/APIServerSNI are not enabled due to clean-up reconciliations.
---
apiVersion: {{ include "rbacversion" . }}
kind: Role
metadata:
  name: gardener.cloud:system:gardenlet:managed-istio
  namespace: "{{ required ".Values.global.gardenlet.config.sni.ingress.namespace is required" .Values.global.gardenlet.config.sni.ingress.namespace }}"
  labels:
    gardener.cloud/role: gardenlet
    app: gardener
    role: gardenlet
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - networking.istio.io
  resources:
  - gateways
  - envoyfilters
  - virtualservices
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - networking.istio.io
  resources:
  - envoyfilters
  verbs:
  - create
---
apiVersion: {{ include "rbacversion" . }}
kind: RoleBinding
metadata:
  name: gardener.cloud:system:gardenlet:managed-istio
  namespace: "{{ required ".Values.global.gardenlet.config.sni.ingress.namespace is required" .Values.global.gardenlet.config.sni.ingress.namespace }}"
  labels:
    gardener.cloud/role: gardenlet
    app: gardener
    role: gardenlet
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gardener.cloud:system:gardenlet:managed-istio
subjects:
- kind: ServiceAccount
  name: "{{ required ".Values.global.gardenlet.serviceAccountName is required" .Values.global.gardenlet.serviceAccountName }}"
  namespace: garden
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRole
metadata:
  name: gardener.cloud:system:gardenlet:managed-istio
  labels:
    gardener.cloud/role: gardenlet
    app: gardener
    role: gardenlet
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  resourceNames:
  - attributemanifests.config.istio.io
  - clusterrbacconfigs.rbac.istio.io
  - handlers.config.istio.io
  - httpapispecbindings.config.istio.io
  - httpapispecs.config.istio.io
  - instances.config.istio.io
  - meshpolicies.authentication.istio.io
  - policies.authentication.istio.io
  - quotaspecbindings.config.istio.io
  - quotaspecs.config.istio.io
  - rbacconfigs.rbac.istio.io
  - rules.config.istio.io
  - servicerolebindings.rbac.istio.io
  - serviceroles.rbac.istio.io
  verbs:
  - delete
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  resourceNames:
  - istiod
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.istio.io
  resources:
  - destinationrules
  - gateways
  - virtualservices
  resourceNames:
  - kube-apiserver
  verbs:
  - delete
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - networking.istio.io
  resources:
  - destinationrules
  - gateways
  - virtualservices
  verbs:
  - create
---
apiVersion: {{ include "rbacversion" . }}
kind: ClusterRoleBinding
metadata:
  name: gardener.cloud:system:gardenlet:managed-istio
  labels:
    gardener.cloud/role: gardenlet
    app: gardener
    role: gardenlet
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gardener.cloud:system:gardenlet:managed-istio
subjects:
- kind: ServiceAccount
  name: "{{ required ".Values.global.gardenlet.serviceAccountName is required" .Values.global.gardenlet.serviceAccountName }}"
  namespace: garden


{{- if .Values.global.gardenlet.config.featureGates }}
{{- if .Values.global.gardenlet.config.featureGates.ManagedIstio }}
---
apiVersion: {{ include "rbacversion" . }}
kind: Role
metadata:
  name: gardener.cloud:system:gardenlet:managed-istio
  namespace: istio-system
  labels:
    gardener.cloud/role: gardenlet
    app: gardener
    role: gardenlet
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
rules:
- apiGroups:
  - networking.istio.io
  resources:
  - destinationrules
  - sidecars
  resourceNames:
  - default
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.istio.io
  resources:
  - sidecars
  verbs:
  - create
- apiGroups:
  - security.istio.io
  resources:
  - peerauthentications
  resourceNames:
  - default
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - security.istio.io
  resources:
  - peerauthentications
  verbs:
  - create
---
apiVersion: {{ include "rbacversion" . }}
kind: RoleBinding
metadata:
  name: gardener.cloud:system:gardenlet:managed-istio
  namespace: istio-system
  labels:
    gardener.cloud/role: gardenlet
    app: gardener
    role: gardenlet
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gardener.cloud:system:gardenlet:managed-istio
subjects:
- kind: ServiceAccount
  name: "{{ required ".Values.global.gardenlet.serviceAccountName is required" .Values.global.gardenlet.serviceAccountName }}"
  namespace: garden
{{- end }}
{{- end }}
{{- end }}
