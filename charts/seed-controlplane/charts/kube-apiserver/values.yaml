replicas: 1
kubernetesVersion: 1.15.2
priorityClassName: foo
securePort: 443
probeCredentials: base64(user:pass)
shootNetworks:
  services: 10.0.1.0/24
podAnnotations: {}
featureGates: {}
  # CustomResourceValidation: true
  # RotateKubeletServerCertificate: false
runtimeConfig: {}
  # autoscaling/v2alpha1: true

oidcConfig: {}
  # caBundle: |
  #   -----BEGIN CERTIFICATE-----
  #   ...
  #   -----END CERTIFICATE-----
  # clientID: clientid
  # groupsClaim: groups
  # groupsPrefix: prefix
  # issuerURL: http://localhost
  # signingAlgs:
  # - foo
  # requiredClaims:
  #   foo: bar
  #   bar: foo
  # usernameClaim: user
  # usernamePrefix: prefix

admissionPlugins:
- name: Priority
- name: NamespaceLifecycle
- name: LimitRanger
- name: PodSecurityPolicy
- name: ServiceAccount
- name: NodeRestriction
- name: DefaultStorageClass
- name: PersistentVolumeLabel
- name: DefaultTolerationSeconds
- name: StorageObjectInUseProtection
- name: MutatingAdmissionWebhook
- name: ValidatingAdmissionWebhook
- name: ResourceQuota
# - name: PodNodeSelector
#   config:
#     podNodeSelectorPluginConfig:
#       clusterDefaultNodeSelector: <node-selectors-labels>
#       namespace1: <node-selectors-labels>
#       namespace2: <node-selectors-labels>

blackboxExporterPort: 9115
etcdServicePort: 2379

auditConfig:
  auditPolicy: ""

enableEtcdEncryption: false
enableBasicAuthentication: true

## Identifiers of the API. The service account token authenticator will validate that tokens used
## against the API are bound to at least one of these audiences. If the .serviceAccountConfig.issuer
## is configured and this flag is not, this field defaults to a single element list
## containing the issuer URL .
apiAudiences:
- kubernetes

## Configuration of how to issue service accounts
#serviceAccountConfig:
#  # Identifier of the service account token issuer. The issuer will assert this identifier in "iss"
#  # claim of issued tokens. This value is a string or URI.
#  issuer: "my-issuer"
#  # The current private key of the service account token issuer. The issuer will sign issued ID
#  #  tokens with this private key. (Requires the 'TokenRequest' feature gate.)
#  signingKey: <private key in PEM format>

sni:
  enabled: false
  advertiseIP: 1.1.1.1

# watchCacheSizes:
#   default: 100
#   resources:
#     - resource: secrets
#       size: 500
#     - apiGroup: apps
#       resource: deployments
#       size: 500

#maxNonMutatingRequestsInflight: 400
#maxMutatingRequestsInflight: 200

reversedVPN:
  enabled: false

externalHostname: ""

enableAnonymousAuthentication: false

tlsCipherSuites: []
