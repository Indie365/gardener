apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- toYaml .Values.labels | nindent 4 }}
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: metrics
    port: {{ include "kube-scheduler.port" . }}
    protocol: TCP
  selector:
    {{- toYaml .Values.labels | nindent 4 }}
---
apiVersion: {{ include "deploymentversion" . }}
kind: Deployment
metadata:
  name: kube-scheduler
  namespace: {{ .Release.Namespace }}
  labels:
    {{- toYaml .Values.labels | nindent 4 }}
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- toYaml .Values.labels | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap-componentconfig: {{ include (print $.Template.BasePath "/componentconfig.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        {{- toYaml .Values.labels | nindent 8 }}
        {{- toYaml .Values.podLabels | nindent 8 }}
    spec:
      containers:
      - name: kube-scheduler
        image: {{ index .Values.images "kube-scheduler" }}
        imagePullPolicy: IfNotPresent
        command:
        {{- if semverCompare "< 1.17" .Values.kubernetesVersion }}
        - /hyperkube
        {{- if semverCompare "< 1.15" .Values.kubernetesVersion }}
        - scheduler
        {{- else }}
        - kube-scheduler
        {{- end }}
        {{- else }}
        - /usr/local/bin/kube-scheduler
        {{- end }}
        - --config={{ .Values.volumes.config.mountPath }}/{{ .Values.volumes.config.dataKey }}
        {{- if semverCompare ">= 1.13" .Values.kubernetesVersion }}
        - --authentication-kubeconfig={{ .Values.volumes.kubeconfig.mountPath }}/kubeconfig
        - --authorization-kubeconfig={{ .Values.volumes.kubeconfig.mountPath }}/kubeconfig
        - --client-ca-file={{ .Values.volumes.server.mountPath }}/ca.crt
        - --tls-cert-file={{ .Values.volumes.server.mountPath }}/kube-scheduler-server.crt
        - --tls-private-key-file={{ .Values.volumes.server.mountPath }}/kube-scheduler-server.key
        - --secure-port={{ include "kube-scheduler.port" . }}
        - --port=0
        {{- end }}
        {{- include "kube-scheduler.featureGates" . | trimSuffix "," | indent 8 }}
        - --v=2
        livenessProbe:
          httpGet:
            path: /healthz
            {{- if semverCompare ">= 1.13" .Values.kubernetesVersion }}
            scheme: HTTPS
            {{- else }}
            scheme: HTTP
            {{- end }}
            port: {{ include "kube-scheduler.port" . }}
          successThreshold: 1
          failureThreshold: 2
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 15
        ports:
        - name: {{ .Values.ports.metrics.name }}
          containerPort: {{ include "kube-scheduler.port" . }}
          protocol: {{ .Values.ports.metrics.protocol }}
        {{- if .Values.kubeMaxPDVols }}
        env:
        - name: KUBE_MAX_PD_VOLS
          value: {{ .Values.kubeMaxPDVols | quote }}
        {{- end }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        {{- if .Values.resources }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: {{ .Values.volumes.kubeconfig.name }}
          mountPath: {{ .Values.volumes.kubeconfig.mountPath }}
        - name: {{ .Values.volumes.server.name }}
          mountPath: {{ .Values.volumes.server.mountPath }}
        - name: {{ .Values.volumes.config.name }}
          mountPath: {{ .Values.volumes.config.mountPath }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: {{ .Values.volumes.kubeconfig.name }}
        secret:
          secretName: {{ .Values.volumes.kubeconfig.secretName }}
      - name: {{ .Values.volumes.server.name }}
        secret:
          secretName: {{ .Values.volumes.server.secretName }}
      - name: {{ .Values.volumes.config.name }}
        configMap:
          name: {{ .Values.volumes.config.configMapName }}
