apiVersion: v1
kind: Service
metadata:
  name: kube-scheduler
  namespace: {{.Release.Namespace}}
  labels:
    app: kubernetes
    role: scheduler
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "10251"
    prometheus.io/name: kube-scheduler
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: metrics
      port: 10251
      protocol: TCP
  selector:
    app: kubernetes
    role: scheduler
---
apiVersion: {{include "deploymentversion" .}}
kind: Deployment
metadata:
  name: kube-scheduler
  namespace: {{.Release.Namespace}}
  labels:
    app: kubernetes
    role: scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubernetes
      role: scheduler
  template:
    metadata:
      annotations:
        checksum/configmap-componentconfig: {{ include (print $.Template.BasePath "/componentconfig.yaml") . | sha256sum }}
{{- if .Values.PodAnnotations }}
{{ toYaml .Values.PodAnnotations | indent 8 }}
{{- end }}
      labels:
        app: kubernetes
        role: scheduler
    spec:
      tolerations:
      - effect: NoExecute
        operator: Exists
      containers:
      - name: kube-scheduler
        image: k8s.gcr.io/hyperkube:v{{.Values.KubernetesVersion}}
        imagePullPolicy: IfNotPresent
        command:
        - /hyperkube
        - scheduler
        {{- if semverCompare ">= 1.9" .Values.KubernetesVersion }}
        - --config=/var/lib/kube-scheduler-config/config.yaml
        {{- else }}
        - --kubeconfig=/var/lib/kube-scheduler/kubeconfig
        - --leader-elect=true
        {{- end }}
        {{- include "kube-scheduler.featureGates" . | trimSuffix "," | indent 8 }}
        - --v=2
        livenessProbe:
          httpGet:
            path: /healthz
            scheme: HTTP
            port: 10251
          successThreshold: 1
          failureThreshold: 2
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 15
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - name: kube-scheduler
          mountPath: /var/lib/kube-scheduler
        {{- if semverCompare ">= 1.9" .Values.KubernetesVersion }}
        - name: kube-scheduler-config
          mountPath: /var/lib/kube-scheduler-config
        {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: kube-scheduler
        secret:
          secretName: kube-scheduler
      {{- if semverCompare ">= 1.9" .Values.KubernetesVersion }}
      - name: kube-scheduler-config
        configMap:
          name: kube-scheduler-config
      {{- end }}
