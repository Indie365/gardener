apiVersion: v1
kind: Namespace
metadata:
  name: registry
  labels:
    app: registry     
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: registry
  labels:
    app: registry
spec:
  type: ClusterIP
  selector:
    app: registry
  ports:
  - port: 5000
    targetPort: registry
    protocol: TCP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: registry
  namespace: registry
  labels:
    app: registry
spec:
  replicas: 1
  serviceName: registry-svc
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      automountServiceAccountToken: false
      containers:
      - name: registry
        image: registry:2
        imagePullPolicy: IfNotPresent
        ports:
        - name: registry
          containerPort: 5000
        volumeMounts:
        - name: registry-volume
          mountPath: /var/lib/registry
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: registry
      name: registry-volume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      volumeMode: Filesystem      
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: registry-ingress
  namespace: registry
  annotations:
    # TLS cert by managed gardener
    cert.gardener.cloud/purpose: managed
    # DNS managed by gardener
    dns.gardener.cloud/class: garden
    dns.gardener.cloud/ttl: "600"
    dns.gardener.cloud/dnsnames: $HOST
    # Enable Basic Authentication
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: registry-htpasswd
    nginx.ingress.kubernetes.io/auth-realm: 'Registry realm'
    # Docker registry specific settings according to https://docs.docker.com/registry/recipes/nginx/
    nginx.ingress.kubernetes.io/proxy-read-timeout: "900"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      chunked_transfer_encoding on;
      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        return 404;
      }
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - $HOST
      secretName: registry-tls
  rules:
  - host: $HOST
    http:
      paths:
      - path: /v2
        pathType: Prefix
        backend:
          service:
            name: registry
            port:
              number: 5000
